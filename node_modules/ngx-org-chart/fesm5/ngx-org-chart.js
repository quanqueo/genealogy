import { CommonModule } from '@angular/common';
import { EventEmitter, Component, Input, Output, NgModule, HostBinding } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxChartNodeComponent = /** @class */ (function () {
    function NgxChartNodeComponent() {
        this.hasParent = false;
        this.direction = 'vertical';
        this.itemClick = new EventEmitter();
    }
    NgxChartNodeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-chart-node',
                    template: "<div ngClass=\"ngx-org-connector-{{direction}}\" class=\"ngx-org-border\" *ngIf=\"hasParent\"></div>\r\n<div [ngClass]=\"node?.cssClass\" class=\"ngx-org-box ngx-org-border ngx-org-background\" (click)=\"itemClick.emit(node)\">\r\n  <div *ngIf=\"node?.image\" class=\"ngx-org-image ngx-org-border\"\r\n    [ngStyle]=\"{ 'background-image': 'url(\\''+ node?.image+'\\')'}\">\r\n  </div>\r\n  <div>\r\n    <div class=\"ngx-org-name\">{{node?.name}}</div>\r\n    <div class=\"ngx-org-title\">{{node?.title}}</div>\r\n  </div>\r\n</div>\r\n<div ngClass=\"ngx-org-connector-{{direction}}\" class=\"ngx-org-border\" *ngIf=\"node?.childs?.length\"></div>\r\n",
                    styles: [":host{display:flex;align-items:center}.ngx-org-box{cursor:pointer;display:flex;align-items:center}"]
                }] }
    ];
    NgxChartNodeComponent.propDecorators = {
        node: [{ type: Input }],
        hasParent: [{ type: Input }],
        direction: [{ type: Input }],
        itemClick: [{ type: Output }]
    };
    return NgxChartNodeComponent;
}());
if (false) {
    /** @type {?} */
    NgxChartNodeComponent.prototype.node;
    /** @type {?} */
    NgxChartNodeComponent.prototype.hasParent;
    /** @type {?} */
    NgxChartNodeComponent.prototype.direction;
    /** @type {?} */
    NgxChartNodeComponent.prototype.itemClick;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxChartNodeModule = /** @class */ (function () {
    function NgxChartNodeModule() {
    }
    NgxChartNodeModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        NgxChartNodeComponent
                    ],
                    imports: [
                        CommonModule
                    ],
                    bootstrap: [NgxChartNodeComponent],
                    exports: [NgxChartNodeComponent]
                },] }
    ];
    return NgxChartNodeModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxChartDesignerComponent = /** @class */ (function () {
    function NgxChartDesignerComponent() {
        this.hasParent = false;
        this.direction = 'vertical';
        this.itemClick = new EventEmitter();
    }
    Object.defineProperty(NgxChartDesignerComponent.prototype, "hostClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.direction === 'vertical' ? 'column' : '';
        },
        enumerable: true,
        configurable: true
    });
    NgxChartDesignerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-chart-designer',
                    template: "<ngx-chart-node *ngIf=\"node\" ngClass=\"ngx-org-{{direction}}\" [node]=\"node\" [hasParent]=\"hasParent\"\r\n  [direction]=\"direction\" (itemClick)=\"itemClick.emit($event)\">\r\n</ngx-chart-node>\r\n\r\n<div *ngIf=\"node?.childs?.length\" ngClass=\"ngx-org-reports-{{direction}}\" class=\"ngx-org-reports\">\r\n  <ng-container *ngFor=\"let childNode of node?.childs; first as isFirst; last as isLast\">\r\n    <div ngClass=\"ngx-org-org-container-{{direction}}\" class=\"ngx-org-org-container\">\r\n      <div ngClass=\"ngx-org-connector-container-{{direction}}\" class=\"ngx-org-connector-container\">\r\n        <div class=\"ngx-org-connector ngx-org-border\" [style.border-color]=\"isFirst?'transparent':''\"></div>\r\n        <div class=\"ngx-org-border\"></div>\r\n        <div class=\"ngx-org-connector ngx-org-border\" [style.border-color]=\"isLast?'transparent':''\"></div>\r\n      </div>\r\n      <ngx-chart-designer [node]=\"childNode\" [hasParent]=\"true\" [direction]=\"direction\" (itemClick)=\"itemClick.emit($event)\">\r\n      </ngx-chart-designer>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n",
                    styles: [":host{display:flex;align-items:center;flex:1}.ngx-org-vertical{flex-direction:column}.ngx-org-org-container{display:flex}.ngx-org-org-container-vertical{flex-direction:column}.ngx-org-connector{flex:1}.ngx-org-connector-container{display:flex}.ngx-org-connector-container-horizontal{flex-direction:column}.ngx-org-reports{display:flex;flex:1}.ngx-org-reports-horizontal{flex-direction:column}"]
                }] }
    ];
    NgxChartDesignerComponent.propDecorators = {
        node: [{ type: Input }],
        hasParent: [{ type: Input }],
        direction: [{ type: Input }],
        itemClick: [{ type: Output }],
        hostClass: [{ type: HostBinding, args: ['style.flex-direction',] }]
    };
    return NgxChartDesignerComponent;
}());
if (false) {
    /** @type {?} */
    NgxChartDesignerComponent.prototype.node;
    /** @type {?} */
    NgxChartDesignerComponent.prototype.hasParent;
    /** @type {?} */
    NgxChartDesignerComponent.prototype.direction;
    /** @type {?} */
    NgxChartDesignerComponent.prototype.itemClick;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxChartDesignerModule = /** @class */ (function () {
    function NgxChartDesignerModule() {
    }
    NgxChartDesignerModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        NgxChartDesignerComponent
                    ],
                    imports: [
                        CommonModule,
                        NgxChartNodeModule
                    ],
                    bootstrap: [NgxChartDesignerComponent],
                    exports: [NgxChartDesignerComponent]
                },] }
    ];
    return NgxChartDesignerModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxOrgChartComponent = /** @class */ (function () {
    function NgxOrgChartComponent() {
        this.hasParent = false;
        this.direction = 'vertical';
        this.itemClick = new EventEmitter();
    }
    NgxOrgChartComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-org-chart',
                    template: "<div *ngIf=\"nodes?.length\">\r\n  <ng-container *ngFor=\"let node of nodes\">\r\n    <div class=\"ngx-org-self-{{direction}}\">\r\n      <ngx-chart-designer [node]=\"node\" [direction]=\"direction\" (itemClick)=\"itemClick.emit($event)\"></ngx-chart-designer>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n",
                    styles: ["body,html{display:flex;flex:1}.ngx-org-name{font-family:\"Patua One\",cursive}.ngx-org-title{font-family:Oswald,sans-serif}.ngx-org-border{border-color:#9e9e9e}.ngx-org-box{color:#000;width:10em}.ngx-org-self-vertical{margin-bottom:2%}"]
                }] }
    ];
    NgxOrgChartComponent.propDecorators = {
        nodes: [{ type: Input }],
        hasParent: [{ type: Input }],
        direction: [{ type: Input }],
        itemClick: [{ type: Output }]
    };
    return NgxOrgChartComponent;
}());
if (false) {
    /** @type {?} */
    NgxOrgChartComponent.prototype.nodes;
    /** @type {?} */
    NgxOrgChartComponent.prototype.hasParent;
    /** @type {?} */
    NgxOrgChartComponent.prototype.direction;
    /** @type {?} */
    NgxOrgChartComponent.prototype.itemClick;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NgxOrgChartModule = /** @class */ (function () {
    function NgxOrgChartModule() {
    }
    NgxOrgChartModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        NgxOrgChartComponent
                    ],
                    imports: [
                        CommonModule,
                        NgxChartDesignerModule
                    ],
                    bootstrap: [NgxOrgChartComponent],
                    exports: [NgxOrgChartComponent]
                },] }
    ];
    return NgxOrgChartModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { NgxOrgChartModule, NgxOrgChartComponent as ɵa, NgxChartDesignerModule as ɵb, NgxChartDesignerComponent as ɵc, NgxChartNodeModule as ɵd, NgxChartNodeComponent as ɵe };
//# sourceMappingURL=ngx-org-chart.js.map
