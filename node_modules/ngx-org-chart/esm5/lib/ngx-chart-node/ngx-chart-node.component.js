/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
var NgxChartNodeComponent = /** @class */ (function () {
    function NgxChartNodeComponent() {
        this.hasParent = false;
        this.direction = 'vertical';
        this.itemClick = new EventEmitter();
    }
    NgxChartNodeComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-chart-node',
                    template: "<div ngClass=\"ngx-org-connector-{{direction}}\" class=\"ngx-org-border\" *ngIf=\"hasParent\"></div>\r\n<div [ngClass]=\"node?.cssClass\" class=\"ngx-org-box ngx-org-border ngx-org-background\" (click)=\"itemClick.emit(node)\">\r\n  <div *ngIf=\"node?.image\" class=\"ngx-org-image ngx-org-border\"\r\n    [ngStyle]=\"{ 'background-image': 'url(\\''+ node?.image+'\\')'}\">\r\n  </div>\r\n  <div>\r\n    <div class=\"ngx-org-name\">{{node?.name}}</div>\r\n    <div class=\"ngx-org-title\">{{node?.title}}</div>\r\n  </div>\r\n</div>\r\n<div ngClass=\"ngx-org-connector-{{direction}}\" class=\"ngx-org-border\" *ngIf=\"node?.childs?.length\"></div>\r\n",
                    styles: [":host{display:flex;align-items:center}.ngx-org-box{cursor:pointer;display:flex;align-items:center}"]
                }] }
    ];
    NgxChartNodeComponent.propDecorators = {
        node: [{ type: Input }],
        hasParent: [{ type: Input }],
        direction: [{ type: Input }],
        itemClick: [{ type: Output }]
    };
    return NgxChartNodeComponent;
}());
export { NgxChartNodeComponent };
if (false) {
    /** @type {?} */
    NgxChartNodeComponent.prototype.node;
    /** @type {?} */
    NgxChartNodeComponent.prototype.hasParent;
    /** @type {?} */
    NgxChartNodeComponent.prototype.direction;
    /** @type {?} */
    NgxChartNodeComponent.prototype.itemClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWNoYXJ0LW5vZGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vbmd4LW9yZy1jaGFydC8iLCJzb3VyY2VzIjpbImxpYi9uZ3gtY2hhcnQtbm9kZS9uZ3gtY2hhcnQtbm9kZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJdkU7SUFBQTtRQVdFLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFHbEIsY0FBUyxHQUE4QixVQUFVLENBQUM7UUFFeEMsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFTLENBQUM7SUFDbEQsQ0FBQzs7Z0JBakJBLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQix1cEJBQThDOztpQkFFL0M7Ozt1QkFHRSxLQUFLOzRCQUdMLEtBQUs7NEJBR0wsS0FBSzs0QkFHTCxNQUFNOztJQUNULDRCQUFDO0NBQUEsQUFqQkQsSUFpQkM7U0FaWSxxQkFBcUI7OztJQUVoQyxxQ0FDWTs7SUFFWiwwQ0FDa0I7O0lBRWxCLDBDQUNrRDs7SUFFbEQsMENBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IElOb2RlIH0gZnJvbSAnLi4vbm9kZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25neC1jaGFydC1ub2RlJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vbmd4LWNoYXJ0LW5vZGUuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL25neC1jaGFydC1ub2RlLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIE5neENoYXJ0Tm9kZUNvbXBvbmVudCB7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgbm9kZTogSU5vZGU7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgaGFzUGFyZW50ID0gZmFsc2U7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZGlyZWN0aW9uOiAndmVydGljYWwnIHwgJ2hvcml6b250YWwnID0gJ3ZlcnRpY2FsJztcclxuXHJcbiAgQE91dHB1dCgpIGl0ZW1DbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8SU5vZGU+KCk7XHJcbn1cclxuIl19