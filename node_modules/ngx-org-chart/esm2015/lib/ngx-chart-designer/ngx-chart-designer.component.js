/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';
export class NgxChartDesignerComponent {
    constructor() {
        this.hasParent = false;
        this.direction = 'vertical';
        this.itemClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    get hostClass() {
        return this.direction === 'vertical' ? 'column' : '';
    }
}
NgxChartDesignerComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-chart-designer',
                template: "<ngx-chart-node *ngIf=\"node\" ngClass=\"ngx-org-{{direction}}\" [node]=\"node\" [hasParent]=\"hasParent\"\r\n  [direction]=\"direction\" (itemClick)=\"itemClick.emit($event)\">\r\n</ngx-chart-node>\r\n\r\n<div *ngIf=\"node?.childs?.length\" ngClass=\"ngx-org-reports-{{direction}}\" class=\"ngx-org-reports\">\r\n  <ng-container *ngFor=\"let childNode of node?.childs; first as isFirst; last as isLast\">\r\n    <div ngClass=\"ngx-org-org-container-{{direction}}\" class=\"ngx-org-org-container\">\r\n      <div ngClass=\"ngx-org-connector-container-{{direction}}\" class=\"ngx-org-connector-container\">\r\n        <div class=\"ngx-org-connector ngx-org-border\" [style.border-color]=\"isFirst?'transparent':''\"></div>\r\n        <div class=\"ngx-org-border\"></div>\r\n        <div class=\"ngx-org-connector ngx-org-border\" [style.border-color]=\"isLast?'transparent':''\"></div>\r\n      </div>\r\n      <ngx-chart-designer [node]=\"childNode\" [hasParent]=\"true\" [direction]=\"direction\" (itemClick)=\"itemClick.emit($event)\">\r\n      </ngx-chart-designer>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n",
                styles: [":host{display:flex;align-items:center;flex:1}.ngx-org-vertical{flex-direction:column}.ngx-org-org-container{display:flex}.ngx-org-org-container-vertical{flex-direction:column}.ngx-org-connector{flex:1}.ngx-org-connector-container{display:flex}.ngx-org-connector-container-horizontal{flex-direction:column}.ngx-org-reports{display:flex;flex:1}.ngx-org-reports-horizontal{flex-direction:column}"]
            }] }
];
NgxChartDesignerComponent.propDecorators = {
    node: [{ type: Input }],
    hasParent: [{ type: Input }],
    direction: [{ type: Input }],
    itemClick: [{ type: Output }],
    hostClass: [{ type: HostBinding, args: ['style.flex-direction',] }]
};
if (false) {
    /** @type {?} */
    NgxChartDesignerComponent.prototype.node;
    /** @type {?} */
    NgxChartDesignerComponent.prototype.hasParent;
    /** @type {?} */
    NgxChartDesignerComponent.prototype.direction;
    /** @type {?} */
    NgxChartDesignerComponent.prototype.itemClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWNoYXJ0LWRlc2lnbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1vcmctY2hhcnQvIiwic291cmNlcyI6WyJsaWIvbmd4LWNoYXJ0LWRlc2lnbmVyL25neC1jaGFydC1kZXNpZ25lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBU3BGLE1BQU0sT0FBTyx5QkFBeUI7SUFMdEM7UUFXRSxjQUFTLEdBQUcsS0FBSyxDQUFDO1FBR2xCLGNBQVMsR0FBOEIsVUFBVSxDQUFDO1FBRXhDLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBUyxDQUFDO0lBTWxELENBQUM7Ozs7SUFKQyxJQUNJLFNBQVM7UUFDWCxPQUFPLElBQUksQ0FBQyxTQUFTLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUN2RCxDQUFDOzs7WUFyQkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLHltQ0FBa0Q7O2FBRW5EOzs7bUJBR0UsS0FBSzt3QkFHTCxLQUFLO3dCQUdMLEtBQUs7d0JBR0wsTUFBTTt3QkFFTixXQUFXLFNBQUMsc0JBQXNCOzs7O0lBWG5DLHlDQUNZOztJQUVaLDhDQUNrQjs7SUFFbEIsOENBQ2tEOztJQUVsRCw4Q0FBZ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IElOb2RlIH0gZnJvbSAnLi4vbm9kZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25neC1jaGFydC1kZXNpZ25lcicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL25neC1jaGFydC1kZXNpZ25lci5jb21wb25lbnQuaHRtbCcsXHJcbiAgc3R5bGVVcmxzOiBbJy4vbmd4LWNoYXJ0LWRlc2lnbmVyLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIE5neENoYXJ0RGVzaWduZXJDb21wb25lbnQge1xyXG5cclxuICBASW5wdXQoKVxyXG4gIG5vZGU6IElOb2RlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGhhc1BhcmVudCA9IGZhbHNlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyB8ICdob3Jpem9udGFsJyA9ICd2ZXJ0aWNhbCc7XHJcblxyXG4gIEBPdXRwdXQoKSBpdGVtQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPElOb2RlPigpO1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ3N0eWxlLmZsZXgtZGlyZWN0aW9uJylcclxuICBnZXQgaG9zdENsYXNzKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZGlyZWN0aW9uID09PSAndmVydGljYWwnID8gJ2NvbHVtbicgOiAnJztcclxuICB9XHJcbn1cclxuIl19