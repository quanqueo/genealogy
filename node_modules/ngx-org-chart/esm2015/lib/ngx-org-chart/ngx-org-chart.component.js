/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output } from '@angular/core';
export class NgxOrgChartComponent {
    constructor() {
        this.hasParent = false;
        this.direction = 'vertical';
        this.itemClick = new EventEmitter();
    }
}
NgxOrgChartComponent.decorators = [
    { type: Component, args: [{
                selector: 'ngx-org-chart',
                template: "<div *ngIf=\"nodes?.length\">\r\n  <ng-container *ngFor=\"let node of nodes\">\r\n    <div class=\"ngx-org-self-{{direction}}\">\r\n      <ngx-chart-designer [node]=\"node\" [direction]=\"direction\" (itemClick)=\"itemClick.emit($event)\"></ngx-chart-designer>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n",
                styles: ["body,html{display:flex;flex:1}.ngx-org-name{font-family:\"Patua One\",cursive}.ngx-org-title{font-family:Oswald,sans-serif}.ngx-org-border{border-color:#9e9e9e}.ngx-org-box{color:#000;width:10em}.ngx-org-self-vertical{margin-bottom:2%}"]
            }] }
];
NgxOrgChartComponent.propDecorators = {
    nodes: [{ type: Input }],
    hasParent: [{ type: Input }],
    direction: [{ type: Input }],
    itemClick: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    NgxOrgChartComponent.prototype.nodes;
    /** @type {?} */
    NgxOrgChartComponent.prototype.hasParent;
    /** @type {?} */
    NgxOrgChartComponent.prototype.direction;
    /** @type {?} */
    NgxOrgChartComponent.prototype.itemClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LW9yZy1jaGFydC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtb3JnLWNoYXJ0LyIsInNvdXJjZXMiOlsibGliL25neC1vcmctY2hhcnQvbmd4LW9yZy1jaGFydC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFTdkUsTUFBTSxPQUFPLG9CQUFvQjtJQUxqQztRQVdFLGNBQVMsR0FBRyxLQUFLLENBQUM7UUFHbEIsY0FBUyxHQUE4QixVQUFVLENBQUM7UUFFeEMsY0FBUyxHQUFHLElBQUksWUFBWSxFQUFTLENBQUM7SUFDbEQsQ0FBQzs7O1lBakJBLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsZUFBZTtnQkFDekIsaVVBQTZDOzthQUU5Qzs7O29CQUdFLEtBQUs7d0JBR0wsS0FBSzt3QkFHTCxLQUFLO3dCQUdMLE1BQU07Ozs7SUFUUCxxQ0FDZTs7SUFFZix5Q0FDa0I7O0lBRWxCLHlDQUNrRDs7SUFFbEQseUNBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbmltcG9ydCB7IElOb2RlIH0gZnJvbSAnLi4vbm9kZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ25neC1vcmctY2hhcnQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9uZ3gtb3JnLWNoYXJ0LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9uZ3gtb3JnLWNoYXJ0LmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIE5neE9yZ0NoYXJ0Q29tcG9uZW50IHtcclxuXHJcbiAgQElucHV0KClcclxuICBub2RlczogSU5vZGVbXTtcclxuXHJcbiAgQElucHV0KClcclxuICBoYXNQYXJlbnQgPSBmYWxzZTtcclxuXHJcbiAgQElucHV0KClcclxuICBkaXJlY3Rpb246ICd2ZXJ0aWNhbCcgfCAnaG9yaXpvbnRhbCcgPSAndmVydGljYWwnO1xyXG5cclxuICBAT3V0cHV0KCkgaXRlbUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxJTm9kZT4oKTtcclxufVxyXG4iXX0=